public class Solution {
    public int solution(int[] A) {
        // Step 1: Count frequencies of each number
        Map<Integer, Integer> freqMap = new HashMap<>();
        for (int num : A) {
            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);
        }

        // Step 2: Calculate the minimum number of moves
        int moves = 0;
        for (Map.Entry<Integer, Integer> entry : freqMap.entrySet()) {
            int num = entry.getKey();
            int count = entry.getValue();
            // If the current count is less than the desired count (num), insert
            if (count < num) {
                moves += (num - count);
            }
            // If the current count is more than the desired count (num), remove
            else if (count > num) {
                moves += (count - num);
            }
            // If the current count equals the desired count, no move needed
        }

        return moves;
    }
}
